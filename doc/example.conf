/*  praxis: services for TSora IRC networks.
 *  doc/example.conf: Example configuration file.
 *
 *  Copyright (c) 2004 Eric Will <rakaur@malkier.net>
 *  Copyright (c) 2003-2004 shrike development team.
 *
 *  $Id$
 */

/* IMPORTANT NOTES:
 *
 * All statements end in semi-colons (';').
 *
 * Shell style, C style, and C++ style comments can be used.
 *
 * Files can be included with:
 *     include "filename.conf";
 *
 * Items marked with "(*)" are changeable with REHASH.
 */

/* serverinfo{}
 * This block defines how we appear on the IRC network.
 */
serverinfo
{
    // name
    // The server name that we use on the IRC network
    // This is the name you'll have to use in C:/N:Lines.
    name = "foo.services";

    // description
    // The "server comment" we send to the IRC network.
    // If you want server hiding, prefix this with "(H)"
    description = "foo services";

    // sid
    // The "server id" to use in TS6.
    // This must be unique throughout the network and is in the form:
    // [0-9][A-Z0-9][A-Z0-9]
    sid = "0AB";

    // vhost
    // Use this to bind to a source IP.
    #vhost = "192.168.1.10";

    // reconnect_time(*)
    // The duration (in seconds) between connection attempts.
    reconnect_time = 10;

    // ping_time(*)
    // The duration (in minutes) to wait before sending PING after no data.
    ping_time = 5;

    // admin_name(*)
    // The name of the person running this service.
    admin_name = "Foo Admin";

    // admin_email(*)
    // The email address of the person running this service.
    admin_email = "foo@admin.bar";
};

/* uplink{}(*)
 * These blocks are used to define uplinks.
 * Multiple can be defined.
 */
uplink "foo.uplink.bar"
{
    // host
    // Hostname or IP address to connect to.
    host = "127.0.0.1";

    // vhost
    // Use this to bind to a source IP
    #vhost = "192.168.10.1";

    // password
    // The password used for linking.
    password = "linkage";

    // port
    // The port to connect to.
    port = 7500;
};

/* userserv{}
 * This block defines userserv settings.
 * userserv requires chanserv.
 */
userserv
{
    // enable(*)
    // Comment out to disable userserv (and chanserv).
    enable;

    // nick(*)
    // userserv's nickname on IRC.
    nick = "Y";

    // user
    // userserv's username/ident on IRC.
    user = "uservice";

    // host
    // userserv's hostname on IRC.
    host = "foo.services";

    // real
    // userserv's "real name" on IRC.
    real = "/msg Y help";

    // max_users(*)
    // The maximum usernames a single email address can register.
    max_users = 5;

    // default_flags(*)
    // The default flags to set for usernames upon registration.
    // Valid values are: hold, neverop, noop, hidemail, none.
    default_flags = { none; };
};

/* chanserv{}
 * This block defines chanserv settings.
 * chanserv requires userserv.
 */
chanserv
{
    // enable(*)
    // Comment out to disable chanserv (and userserv).
    enable;

    // nick(*)
    // chanserv's nickname on IRC.
    nick = "X";

    // user
    // chanserv's username/ident on IRC.
    user = "cservice";

    // host
    // chanserv's hostname on IRC.
    host = "foo.services";

    // real
    // chanserv's "real name" on IRC.
    real = "/msg X help";

    // max_chans(*)
    // The maximum channels a single username can register.
    max_chans = 5;

    // join_chans(*)
    // Uncomment to have chanserv join all registered channels.
    // ENABLING THIS WILL *DRASTICALLY* INCREASE CPU USAGE!
    #join_chans;

    // part_chans(*)
    // Comment to prevent chanserv leaving empty channels.
    // Turning this off is stupid.
    part_chans;

    // default_flags(*)
    // The default flags to set for channels upon registration.
    // Valid values are: hold, neverop, secure, verbose, none.
    default_flags = { secure; verbose; };
};

/* modules{}
 * This block specifies module settings.
 */
modules
{
    // path
    // Specify paths modules can be found in.
    // You can have as many of these as you'd like.
    path = "/home/rakaur/bin/praxis/modules";
    path = "/home/rakaur/bin/praxis/modules/autoload";
};
